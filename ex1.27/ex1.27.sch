(define (expmod base exp m)
  (cond ((= exp 0) 1)
        ((even? exp)
         (remainder (square (expmod base (/ exp 2) m))
                    m))
        (else
         (remainder (* base (expmod base (- exp 1) m))
                    m))))        

(define (fermat-test-single n a)  
    (= (expmod a n n) a))
  
(define (exaustive-fermat-test n a)
    (if (> a 0) 
      (if (fermat-test-single n a)
        (exaustive-fermat-test n (- a 1))
        (begin 
          (display "it failed fermat test at a=") 
          (display a)
          (newline)
        )
      )
      (display "it passed all fermat test with a < n!\n" )      
    ) 
)

(define (ex n)
  (display "Processing the Fermat test on Carmichael number n=")
  (display n)
  (display " for every a < n... ")  
  (exaustive-fermat-test n (- n 1))  
)
(newline)
(newline)

(ex 561)
(ex 1105)
(ex 1729)
(ex 2465)
(ex 2821)
(ex 6601)


(display "\n\ndone\n")
(exit)
